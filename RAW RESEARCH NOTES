Research Notes for Development of Model
- Jacob Sandusky
- Michael Liebel
- RA: Ryan Norris


Project Title:
- Develping a Light Curve Model to Demonstrate Exoplanet Debris Cloud (?)
- (Actual) Development of Exoplanet Transit Model

Project Goal:
- To develop a malliable planetary transit model with diverse abilitity for data input (all parameters of the system). 


Project Completion Date:
- Projected: BY SRS POSTER PRESENTATION 4/18/2023
- Actual Completion: _________________________________


Project Initiated (2/11/2023)


Reminders:
- Needs Development
    - Limb Darkening
    + Organize equations sheet
    - Correct calculation of Watts/m^2
    + Calibration of data
    - Atmospheric Lensing (How?!)
    - Improve Efficiency
        - Change ...**(1/2) to m.sqrt(...)
        - Change ...**(1/8) to ...**0.125
        - Minimize terms calculated for chord length (simplify)
        - Change units to floats
    

Summary (2/11/2023 - 2/18/2023):
Attempt 1_Explanet_Transity 
- Created void-star-planet-atmosphere system with changable variables
    - Void:
        - Variables: Radius, Intensity = 0
    - Star:
        - Simplified Gradient
        - Variables: Radius, intensity, position (relative to Void)
    - Exoplanet:
        - Creates 0 intensity in Void at specific position
        - Variables: Radius, intensity = 0, position (relative to center Star)
    - Atmosphere:
        - Creates defined intensity in Void at specific position
        - Variables: Radius, intensity
- Prints intensity matrix as image
- Creates basic Light Curve as Exoplanet and Atmosphere passes in front of Star




Notes: (2/11/2023)
- Michael reset Anaconda on his laptop
- Began Model Development (Attempt 1_Exoplanet_Transiting)
    - Developed basic call functions for star and exoplanet
    - Developed basic square-array overall to depict luminosity of the system.

~~ Updates:
- Continued Model Development (Attempt 1_Exoplanet_Transiting)
    - Developed basic call function for void (blackness)
    - Developed basic distance formula (for circular stars/exoplanets)
    - Developed basic output of Gray-Scale representation of void intensity array 
        - From Matrix to plot: (0,1) -> (Black, White)
        - Can be at least 600x600 array; Very fast if matrix is not printed
    - Changed position vector of Star/Exoplanet to be on the center of the object



Notes: (2/12/2023)
- Researched Limb Darkening (didn't understand how to implement possible equation)

~~ Updates:
- Continued Model Developement
    - Developed intensity gradiant for the star (intensity = z for sphere equation)
        - Creates dome/contour of values, strongest at the center of the star
            - r = sqrt((x2-x1)^2+(y2-y1)^2+(z2-z1)^2) where r, x2, y2, z2 = radius/2, x1 = i, y1 = j
            - intensity_new = intensity_max/(radius/2)*(abs((radius/2-abs(i))**2+(radius/2-abs(j))**2-radius**2/4+radius/2)**(1/2)) // [1]
    - Attempted Development on Limb Darkening 
        - Failed, very difficult to impliment
        - Necessary for accurate model
        - Assumed equation light intensity to be to the **(1/8) instead **(1/2) // [1]
            - Slightly more accurate
    - Developed Basic Light Curve idea
        - Summation of entire intensity array matrix (IAM) over initial IAM
        - Move planet over a unit
        - Read into vector and repeat
        - Plot entire vector against time
        - Needs improvement (4 minutes for 500 points, with 600x600 IAM)



Notes: (2/13/2023)
- Ryan Norris mentioned to keep the model simple; do not use the Limb Darkening Equation at this moment

~~ Updates:
- Continued Model Developement:
    - Developed basic atmosphere for intensity graph (very simple)
    - Integrated atmosphere into the Light Curve model



Notes: (2/17/2023)
- Meeting with Ryan Norris
    - Gaia/Tess Interface
        - Parameters of Stars
            - Temperature, Radius, Inclination
        - Parameters of Planetary Systems
            - Radius, Orbit Radius, Albedo
    - Mess with model to best of fit with known data (verify)
        - What is necessary to detect this
    - Main point: best fit data
    - Books with some equations
        - Planetary Sciences: Pages -[494-Transit]
        - Foundations of Astrophysics: Pages-[195-Albedo / 300-General]
    - Determine key parameters to fit model (?)
    - Increase with input parameter & Input to more physical things
    - For User interface: 'input' command
    
creating transit parameterization tool
could apply precision to detect the proper atmosphere

    - Think about what needs to be done


~~~~~~~~~~~~~~~~~~~~~~~~~~~ Attempt 2 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Notes: (2/25/2023)
~~ Updates:
- Continued Model Developement in Attempt 2
    - Changed name Radius to Diameter for clarity
    - Included some Markdown equations
        - Apparent brightness given temperature, radius (star), and distance
    - Attempted to impliment units into IAM (not too successful)
    - Changed input of Star to include: distance (lyr), diameter (km), resolution (matrix size), position, and temperature (K)
    - Ended with error in output of Intensity array



Notes: (2/26/2023)
~~ Updates:
- Continued Model Developement in Attempt 2
    - Impliment units into IAM more efficiently (needs work)
    - Changed input of...
        - ... Star to:                 [distance (lyr), diameter (km), resolution (matrix size), position (relative to void), and temperature (K)]
        - ... Exoplanet to:            [diameter (km), position (relative to Star)]
        - ... Exoplanet Atmosphere to: [strength intensity (0-1), height from Exoplanet (km)]
    - Ended with error in Light Curve
    - Added Errors.txt for helping with common errors
    - Implement proper scale to matrix function
    


Notes: (3/3/2023)
- Dr. Bert Kerr helped with finding chord length of a circle given polar equation for a line and a circle
    - Given (x-d)^2+y^2 = R^2 & y = xtan(theta)



Notes: (3/4/2023)
~~ Updates:
- Continued Model Developement in Attempt 2
    - Added Markdown equations for chord length given two circles
    - Changed input of ... Exoplanet Atmosphere to: [strength intensity (0-1), inner height from Exoplanet (km), outer height (km)]
    - Attempted chord length calculation for sphere (atmosphere/cloud debris)
        - Many, many errors (NANs)
    - Changed all round() to m.ceil()
    - Ended with many NANs in final IA



Notes: (3/6/2023)
~~ Updates:
- Continued Model Developement in Attempt 2
    - Finished chord length calculation for sphere (works without breaking)
        - IA chord calculation may be correct
        


Notes: (3/12/2023)
~~ Updates:
- Continued Model Developement in Attempt 2
    - IA chord calculation is not correct
        - Maybe do 
- Did more research
    - Atmospheric Lensing (Intensity will be more that 1 [shoulders of light curve])
    - Refraction Gradient
    


Notes: (3/13/2023)
~~ Updates:
- Continued Model Development in Attempt 2
    - Made chord length calculations faster
    


Notes: (3/14/2023)
~~ Updates:
- Continued Model Development in Attempt 2
    - Made chord length calculations faster
    - Made chord length array correct!
    - Developed atmosphere IA calculation from the chord length
        - Input of absorption, inner height and outer height
    - Rediscovered IA reference from star1 IA is incorrect
        - Fixed tranformation bug between star1 IA and EP1/EP1DC IA
    - Atmosphere IA should be completely finished
        - Input: Exoplanet Atmosphere to [absorption (0-1), inner height from Exoplanet (km), outer height from Exoplanet (km)]
        - Can be used for both regular atmosphere (inner height = 0) and debris cloud
        
        
        
Notes: (3/15/2023)
~~ Updates:
- Developed GitHub Repository
- Continued Model Development in Attempt 2
    - Saved star1 intensity array to CSV (fixing bugs)
        - Time save from 2 hours to 4 minutes (9000x9000 matrix, 1.9 GiB download)
    - Fixed bug where EPs/ATMs/DCs are not properly sized
    - Made testing quicker and more accurate (larger resolution)



Notes: (3/16/2023)
~~ Updates:
- Continued Model Development in Attempt 2
    - Added several comments and help() commands for defined functions.



Notes: (3/17-18/2023)
~~ Updates:
- Continued Model Development in Attempt 2
    - Attempted Refraction against exoplanet
        - Minimal success.
        - Used general equation for an ellipse (including an angle) for more parameters



Notes: (3/19/2023)
~~ Updates:
- Continued Model Development in Attempt 2
    - Refraction against exoplanet finally works!
    - Intensity array for just the exoplanet works
    - Input: Exoplanet - [diameter (km), position (from center of star1), orbitalRadius (AU), albedo = 0]
        - If the planet has no reflection, albedo is 0 (by definition). Would fully block star without reflecting light outside of transit times
    - Reimplimented of light curve with the exoplanetary refraction (produces shoulders)



Notes: (4/2/2023)
~~ Updates:
- Continues Model Development in Attempt 2
    - Integration of MAST (contains TESS/HST/NExSci/GAIA/...) database (!), using System WASP-18b as an example
        - Possibly incorperate Right Angle & Declination angles?
        - Seems to only work with well studied exoplanets
        - Unit propagation
    - Close reintegration of Light Curves with new data
        - Need to use a time-based step rather than a position_matrix-based step
        


Notes: (4/7/2023)
~~ Updates:
- Continued Model Developement in Attempt 2
    - Fixed bugs in units
    - Time-based light curve was create
    - Discovered the maximum refraction was incorrectly calculated (leading to a deformed/incorrect light curve)
        - Found the inproperly place 1/2 (calculating for resolutionOrbitRadius, divided by two when using radius already)
    - Atmospheric refraction may follow a similar pattern to exoplanetary refraction
        - May use two ellipses as parameters/restrictions (not even parabola/hyperbolas)



Notes: (4/8/2023)
~~ Updates:
- Continued Model Developement in Attempt 2
    - Attempted atmosphereic refraction (Desmos)
    - Attempted exoplanet generation efficiency
    - Discovered chord length calculation is NAN at high distances (even with 0 angle)
        - Atmosphere cannot be calculated at that distance (NAN)



Notes: (4/9/2023)
~~ Updates:
- Continued Model Developement in Attempt 2
    - Increased IA calculation efficiency
        - Change unitless units to floats
        - Used some list comprehension rather than just for loops (most times faster (but can only be simple functions) with for/if loops)
        - Decreased time in star1IA from 120 seconds to 8 seconds (1200 resolution) & applied in EP1 & EP1ATM/EP1DC
    - Exoplanet intensity was proportional to Temperature rather than Temperature^4 (selectable within code for images or light curve)
    
    

Notes: (4/11/2023)
~~ Updates:
- Data analysis/results in Attempt 2 between TESS Model vs. Our Model for WASP-18b
- Continued Model Development in Attempt 2
    - Corrected Atmospheric Intensity Array reference values
    - Discovered Atmospheric IA calculation is wrong (becomes indistinguishable from 0)
        - Brought atmosphere to very far distance (1500pc) and couldn't tell a difference from it and the star
    - Finalized Attempt 2
    


Notes: (4/16/2023)
~~ Updates:
- Continued Model Development in Attempt 2
    - Made the generation much more generalized
        - Generalized in the sense that any exoplanet input (with the known system information) can generate a light curve and images
            - Database required info.: Star radius, system distance, star effective temperature, orbital distance, orbital period, dayside temperature, equilibrium temperature, planet radius
            - Used Wikipedia for names, then checked mast.exo to see if TESS has measured the exoplanet, then checked if distance has been calculated
        - The User only needs the input of the star resolution and the exoplanet name (along with the number of points the light curve & images would generate)
        - 10 exoplanet examples commented out
        - Each exoplanet has an associated LC from TESS
        - Submitted to GitHub
    - Attempt 2: Fin.?
    

~~~~~~~~~~
Tiny Break
~~~~~~~~~~


Notes: (5/25/23)
~~ Updates:
- Continued Model Development in Attempt 2
    - Compared light curves between an EP going directly across the star to one going non-centered (from a chord, not a radius) across
        - No new information, but this should be understood (and be considered a possibility in later use)
    - Converted light curve intensity from a 0-1 scale to a ppm scale
        


Notes: (5/27/23)
~~ Updates:
- Continued Model Development in Attempt 2
    - Attempted to fix timings for transit to start on secondary eclipse (where EP goes behind star)



Notes: (6/1/23)
~~ Updates:
- Continued Model Development in Attempt 2
    - Finished secondary eclipse by layering matrices
    - Realized bluring doesn't cause an intensity value change
        - Meaning the telescope that would measure a debris cloud, needs a variation (or deviation) to be less than the observed change
    
    
    
Notes: (6/7/23)
~~ Updates:
- Continued Model Development in Attempt 2
    - (Possibly) Fixed timings for transit
    - More research on atmospheric refraction
        - The more research that is getting done, keeps showing a higher likelihood of requiring raycasting (or a similar approach)
    - Updated GitHub repository



Notes: (6/18/23)
~~ Updates:
- Continued Model Development in Attempt 2
    - Checked units for atmosphere/DC & Star1 classes (along with definitions)
        - Did not fix atmosphere IA
        - Likely in atmosphere IA equation: ((1-self.absorption)**(chordLength/(outerHeight-innerHeight))*black.intensity_array[m.ceil(i + self.position[0]), m.ceil(j + self.position[1])])
            - The expression of "((1-self.absorption ... -innerHeight))" should be between 0 and 1
            - "chordLength" may be incorrectly calculated
            - Check function 'intersectionsForDepth' (for chordLenght) to minimize the extreme distance
        - This equation works when the distance is near zero (<0.0008 parsec)
        - Light Curve (without atmosphere) remains the same after changing distance
        


Notes: (6/23/23)
~~ Updates:
- Continued Model Development in Attempt 2
    - Updated exoplanet placement by implementing inclination angle
        - Many of the previous light curves are now much more similar to TESS's
    - Fixed sudden intensity influx just before secondary transit (slightly slower than before)
    - Started messing with np.random.rand() function for atmospheric refraction
        - This is to use Monte Carlo Simulation for light intensity of the debris cloud
        
        
Notes: (6/24/23)
~~ Updates:
- Continued Model Development in Attempt 2
    - Updated how random function can be implimented into refraction
        - Essentially created a basic system using a 2D refraction system, plotting it by scatterplots
        
Notes: (6/25/23)
~~ Updates:
- Continued Model Development in Attmept 2
    - Updated the refraction system, as a 3D structure.
    - Needs to be converted to matrix elements, rather than 'objects' (like circles) for addition of what refraction does


Notes: (7/5/23)
~~ Updates:
- Continued Model Development in Attmept 2
    - Updated the refraction system, by introducing simulating inputted ray amount
        - It takes around 10 seconds to calculate 100 rays, but around 20 more seconds to produce both images
        - Removes rays that are behind planet
        - Intensifies points of refraction
            - Probability of hitting Earth at 0 deg off vs 45 deg?


Notes: (10/7/23)
~~ Updates:
- Continued Model Development in Attempt 2
    - Created a very basic debris cloud that has a 'sin(orbitAngle)' intensity.
        - This was treated as another 'planet' that didn't override the planet it was beneath.
        - Input variables were DiameterScale and TemperatureScale. These scaling factors were relative to the planet.
            - The 'temperature' of the debris cloud doesn't make sense in terms of albedo, but that can be in a future work.
        - This created the 'shoulders' we expected, but also created an increase in intensity at the very center of the transit.
            - The sudden increase at the center is likely due to our model, but it could be similar to real life
    - Changed main intensity calculation to skip zeros when overlaying matrices to make the code easier to understand and implement.
    
    
Notes: (10/12/23)
~~ Updates:
- Continued Model Development in Attempt 2
    - The data that TESS uses for its model was found and was able to be used when comparing our models.
    - Further implementation of the TESS data will be to find the error in our model compared to theirs.
    
    
Notes: (10/14/23)-(10/16/23)
~~ Updates:
- Continued Model Development in Attempt 2
    - Visual comparison between TESS's model and our model.
    - Found every exoplanet that can be used in our model and integrated into code.
    - Able to quickly create 'the next light curve' by changing one value.
    - There are 889/18215 exoplanets that can be used that have an associated TESS light curve (used for error later)
    - There are 1738/18215 exoplanets that can be inputted into our code (not necessarily having a TESS light curve)
